openapi: 3.0.3
info:
    title: DevOps Checklist
    description: A checklist for DevOps practices and tools.
    version: 1.0.0

paths:
  /checklist:
    get:
      tags:
        - ChecklistManager
      summary: Get all checklists
      operationId: getCheckLists
      responses:
        '200':
          description: List of checklists
          content:
            application/checklist-v1+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistDto'
        '500':
          description: Internal error
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - ChecklistManager
      summary: Create a new checklist
      operationId: createChecklist
      requestBody:
        required: true
        content:
          application/checklist-request-v1+json:
            schema:
              $ref: '#/components/schemas/ChecklistDto'
      responses:
        '201':
          description: Checklist created successfully
          content:
            application/checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ChecklistDto'
        '409':
          description: Checklist already exists
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid checklist format
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /checklist/{id}:
    put:
      tags:
        - ChecklistManager
      summary: Update checklist
      operationId: updateChecklist
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the checklist to update
          schema:
            type: string
      responses:
        '200':
          description: Checklist updated successfully
          content:
            application/checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ChecklistDto'
        '400':
          description: Invalid UUID format
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Checklist with Id not found
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ChecklistManager
      summary: Get checklist by Id
      operationId: getChecklistById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the checklist that we want to get
          schema:
            type: string
      responses:
        '200':
          description: Gets the checklist
          content:
            application/checklist-v1+json:
              schema:
                  $ref: '#/components/schemas/ChecklistDto'
        '400':
          description: Invalid UUID format
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Checklist with Id not found
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal error
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ChecklistManager
      summary: Delete checklist with Id
      operationId: deleteChecklistById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the checklist that we want to delete
          schema:
            type: string
      responses:
        '204':
          description: Delete the checklist with id
        '404':
          description: Checklist with Id not found
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /checklist/{id}/items:
    get:
      tags:
        - ChecklistManager
      summary: Get all checklist items
      operationId: getChecklistItems
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the checklist that we want to get items from
          schema:
            type: string
      responses:
        '200':
          description: List of checklist items
          content:
            application/checklist-item-v1+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChecklistItemDto'
        '400':
          description: Invalid UUID format
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Checklist with Id not found
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - ChecklistManager
      summary: Create a new checklistItem
      operationId: createChecklistItem
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the checklist that we want to create the new item
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/checklist-item-request-v1+json:
            schema:
              $ref: '#/components/schemas/ChecklistItemDto'
      responses:
        '201':
          description: Checklist created successfully
          content:
            application/checklist-item-v1+json:
              schema:
                $ref: '#/components/schemas/ChecklistItemDto'
        '409':
          description: Checklist already exists
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Invalid checklist format
          content:
            application/error-checklist-v1+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ChecklistDto:
      type: object
      properties:
        id:
            type: string
            description: Unique identifier for the checklist
        title:
            type: string
            description: Title of the checklist
        environment:
            type: string
            description: Environment of the checklist
        version:
            type: string
            description: Version of the checklist
        tags:
            type: array
            items:
                $ref: '#/components/schemas/ChecklistTagDto'
            description: Tags associated with the checklist
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistItemDto'
        createdAt:
            type: string
            format: date-time
            description: Creation date of the checklist
        updatedAt:
            type: string
            format: date-time
            description: Last update date of the checklist
    ChecklistItemDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the checklist
        description:
            type: string
            description: Description of the checklist item
        status:
          type: string
          enum: [PENDING, DONE, BLOCKED]
          description: Status of the checklist item
    ChecklistTagDto:
      type: object
      properties:
        tag:
          type: string
          description: Tag of the checklist
    ErrorResponse:
      type: object
      properties:
        title:
          type: string
        code:
          type: integer
        message:
          type: string